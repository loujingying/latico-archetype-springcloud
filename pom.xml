<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.latico.archetype.springcloud</groupId>
    <artifactId>latico-springcloud-archetype</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>server-register</module>
        <module>server-apigateway</module>
        <module>server-config</module>
        <module>server-security</module>
        <module>client-1</module>
        <module>client-2</module>
    </modules>
    <packaging>pom</packaging>
    <name>latico-springcloud-archetype</name>

    <!--邮件管理列表-->
    <mailingLists>
        <mailingList>
            <name>Development List</name>
            <subscribe>dev-subscribe@gdlaticosoft.com</subscribe>
            <unsubscribe>dev-unsubscribe@gdlaticosoft.com</unsubscribe>
            <post>dev@gdlaticosoft.com</post>
        </mailingList>
    </mailingLists>

    <!--开发者-->
    <developers>
        <developer>
            <id>developer-name</id>
            <name>developer-name</name>
            <url>developer-name@gdlaticosoft.com</url>
        </developer>
    </developers>

    <!--许可证-->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--组织机构-->
    <organization>
        <name>laticosoft</name>
        <url>http://www.gdlaticosoft.com/</url>
    </organization>

    <!--项目名称和URL-->
    <issueManagement>
        <!--项目名字，-->
        <system>latico-springcloud-archetype</system>
        <!--该项目使用的URL-->
        <url>https://localhost:8080/latico-springcloud-archetype</url>
    </issueManagement>

    <!--软件配置管理（SCM：Software Configuration Management）功能-->
    <scm>
        <url>http://gitlab.gdlaticosoft.com:7111/common/latico-springcloud-archetype.git</url>
        <!--<connection>scm:svn:http://gitlab.gdlaticosoft.com:7111/common/latico-commons.git</connection>-->
        <connection>scm:git:http://gitlab.gdlaticosoft.com:7111/common/latico-springcloud-archetype.git</connection>
    </scm>

    <!--项目持续集成信息-->
    <ciManagement>
        <!--持续集成系统的名字，例如continuum-->
        <system>jenkins</system>
        <!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。-->
        <url>https://localhost:8080/jenkins</url>
    </ciManagement>

    <!--发布管理，发布到私服地址-->
    <distributionManagement>
        <!-- 私服地址 ，公司级基线仓库 -->
        <repository>
            <id>Releases</id>
            <url>http://172.168.10.100:8081/nexus/content/repositories/releases</url>
        </repository>

        <!-- 私服地址 ，公司级快照仓库 -->
        <snapshotRepository>
            <id>Snapshots</id>
            <url>http://172.168.10.100:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- 版本和变量统一管理 -->
    <properties>
        <!-- JDK版本配置 -->
        <java.version>1.8</java.version>
        <!-- JDK版本配置 -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- 项目编码配置 -->
        <project.encoding>UTF-8</project.encoding>
        <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>${project.encoding}</maven.compiler.encoding>

        <!--跳过单元测试-->
        <skipTests>true</skipTests>
        <!--取消webxml的依赖，非必须的-->
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!--解决控制台乱码问题-->
        <argLine>-Dfile.encoding=UTF-8</argLine>

        <!-- build的时候设置的时间格式, 可用于生成文件名等 -->
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>

        <!-- logback版本配置 -->
        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <janino.version>3.0.11</janino.version>
        <springcloud.version>Greenwich.RELEASE</springcloud.version>
        <springboot.version>2.1.3.RELEASE</springboot.version>
        <swagger.version>2.6.1</swagger.version>
        <feign.version>10.2.0</feign.version>
    </properties>

    <!-- 打包配置 -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>
                        **/*.java
                    </exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <!-- 打源码包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <encoding>${project.encoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--打包骨架插件，有bug(模块中不能含有名称为config的文件夹)-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>

        </plugins>

        <!-- 专用插件统一管理 -->
        <pluginManagement>
            <plugins>

            </plugins>
        </pluginManagement>

    </build>

    <!-- 共用依赖 -->
    <dependencies>

        <!-- 单元测试开始-->
     <!--   <dependency>
            <groupId>com.latico.commons</groupId>
            <artifactId>latico-commons-test</artifactId>
            <version>1.0.0</version>
        </dependency>-->
        <!-- 单元测试结束-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--servlet容器使用-->
        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <!-- 专用依赖统一管理 -->
    <dependencyManagement>
        <dependencies>
            <!--注意：根据同一个pom文件，依赖的优先级是根据依赖的顺序决定，因为要以springboot为主，而且依赖的打包插件等都是要以springboot优先，如果以springcloud在前，那么spring-boot-maven-plugin打包插件不会打包成springboot的启动方式-->
            <!--管理导入springboot的父pom-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--springcloud父依赖管理-->
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.0.0</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!--阿里巴巴数据源-->
            <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
            <!-- alibaba的druid数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.9</version>
            </dependency>
            <!--阿里巴巴数据源-->
            <!-- 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.5</version>
            </dependency>

            <!--模板框架-->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>2.3.28</version>
            </dependency>
            <!--模板框架-->
            <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.9.2</version>
            </dependency>
           <!-- <dependency>
                <groupId>com.latico.commons</groupId>
                <artifactId>latico-commons-common</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.latico.commons</groupId>
                <artifactId>latico-commons-spring</artifactId>
                <version>1.0.0</version>
            </dependency>-->
        </dependencies>
    </dependencyManagement>
</project>